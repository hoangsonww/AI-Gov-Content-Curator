name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  formatting:
    name: "üîß Formatting & Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Format (Prettier)
        run: npm run format
        continue-on-error: true

      - name: Lint (ESLint)
        run: npm run lint
        continue-on-error: true

      - name: Dependency review
        uses: actions/dependency-review-action@v2
        continue-on-error: true

      - name: Security audit
        run: npm audit --audit-level=high
        continue-on-error: true

  backend:
    name: "‚úÖ Backend Build & Test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install backend deps
        run: npm --workspace backend ci
        continue-on-error: true

      - name: Backend format
        run: npm --workspace backend run format
        continue-on-error: true

      - name: Backend lint
        run: npm --workspace backend run lint
        continue-on-error: true

      - name: Build backend
        run: npm --workspace backend run build
        continue-on-error: true

      - name: Backend tests
        run: npm --workspace backend run test
        continue-on-error: true

  frontend:
    name: "üåê Frontend Build & E2E"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install frontend deps
        run: npm --workspace frontend ci
        continue-on-error: true

      - name: Frontend format
        run: npm --workspace frontend run format
        continue-on-error: true

      - name: Frontend lint
        run: npm --workspace frontend run lint
        continue-on-error: true

      - name: Build frontend
        run: npm --workspace frontend run build
        continue-on-error: true

      - name: Install Playwright browsers
        run: npm --workspace frontend exec playwright install --with-deps
        continue-on-error: true

      - name: Frontend E2E tests
        run: npm --workspace frontend run test:e2e
        continue-on-error: true

  crawler:
    name: "ü§ñ Crawler Build & Run"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        continue-on-error: true

      - name: Install crawler deps
        run: npm --workspace crawler ci
        continue-on-error: true

      - name: Crawler format
        run: npm --workspace crawler run format
        continue-on-error: true

      - name: Crawler lint
        run: npm --workspace crawler run lint
        continue-on-error: true

      - name: Build crawler
        run: npm --workspace crawler run build
        continue-on-error: true

      - name: Run crawler job
        run: npm --workspace crawler run crawl
        continue-on-error: true

  docs:
    name: "üìö Documentation"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Generate docs
        run: npm run docs
        continue-on-error: true

  security:
    name: "üîí Security Scan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true

      - name: Run security scan
        run: npm run security-scan
        continue-on-error: true

  final:
    name: "üéâ Pipeline Complete"
    runs-on: ubuntu-latest
    needs: [formatting, backend, frontend, crawler, docs, security]
    steps:
      - name: Final status
        run: echo "‚úÖ CI/CD pipeline finished successfully."
