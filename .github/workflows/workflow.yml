name: CI Pipeline AI Content Curator

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Provide dummy API keys so chat.controller tests don't blow up
  NEWS_API_KEY: dummy
  GOOGLE_AI_API_KEY: dummy
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository }}

jobs:
  formatting:
    name: "üîß Format & Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint

  backend:
    name: "‚úÖ Backend Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & run backend tests
        run: |
          npm --workspace backend ci
          npm --workspace backend test

  crawler:
    name: "ü§ñ Crawler Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & run crawler tests
        run: |
          npm --workspace crawler ci
          npm --workspace crawler test

  newsletters:
    name: "‚úâÔ∏è Newsletters Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & run newsletters tests
        run: |
          npm --workspace newsletters ci
          npm --workspace newsletters test

  frontend:
    name: "üåê Frontend E2E"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & run frontend E2E
        run: |
          npm --workspace frontend ci
          npm --workspace frontend exec playwright install --with-deps
          npm --workspace frontend run test:e2e
        continue-on-error: true

  docker:
    name: "üê≥ Build & Push Docker Images"
    runs-on: ubuntu-latest
    needs:
      - backend
      - crawler
      - newsletters
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/backend:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/backend:${{ github.sha }}

      - name: Build & push crawler image
        uses: docker/build-push-action@v3
        with:
          context: ./crawler
          file: ./crawler/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/crawler:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/crawler:${{ github.sha }}

      - name: Build & push newsletters image
        uses: docker/build-push-action@v3
        with:
          context: ./newsletters
          file: ./newsletters/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/newsletters:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/newsletters:${{ github.sha }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/frontend:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/frontend:${{ github.sha }}

  complete:
    name: "üéâ All Required Tests & Docker Artifacts"
    runs-on: ubuntu-latest
    needs:
      - docker
      - frontend
    if: ${{ always() }}
    steps:
      - run: echo "‚úÖ Tests passed and Docker images built & pushed."
