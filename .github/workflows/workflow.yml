name: CI Pipeline AI Content Curator

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # provide dummy keys so chat & topic-extractor tests don‚Äôt blow up
  NEWS_API_KEY: dummy
  GOOGLE_AI_API_KEY: dummy

jobs:
  formatting:
    name: "üîß Format & Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install all workspaces
        run: npm ci

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint

  backend:
    name: "‚úÖ Backend Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Test Backend
        run: |
          npm --workspace backend ci
          npm --workspace backend test

  crawler:
    name: "ü§ñ Crawler Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ensure all devDeps are present
      - name: Install all workspaces
        run: npm ci

      - name: Run Crawler Tests
        run: npm --workspace crawler run test

  newsletters:
    name: "‚úâÔ∏è Newsletters Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Test Newsletters
        run: |
          npm --workspace newsletters ci
          npm --workspace newsletters test

  frontend:
    name: "üåê Frontend E2E"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Run Frontend E2E
        run: |
          npm --workspace frontend ci
          npm --workspace frontend exec playwright install --with-deps
          npm --workspace frontend run test:e2e
        continue-on-error: true

  complete:
    name: "üéâ All Required Tests Passed"
    runs-on: ubuntu-latest
    needs: [ backend, crawler, newsletters ]
    steps:
      - run: echo "‚úÖ Backend, crawler & newsletters tests all passed; frontend E2E is best‚Äêeffort."

  docker:
    name: "üê≥ Build & Push Docker Images"
    runs-on: ubuntu-latest
    needs: complete
    permissions:
      contents: read
      packages: write   # needed to publish to GHCR
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/hoangsonww/ai-curator-backend:${{ github.sha }}
            ghcr.io/hoangsonww/ai-curator-backend:latest

      - name: Build & push crawler image
        uses: docker/build-push-action@v3
        with:
          context: ./crawler
          file: ./crawler/Dockerfile
          push: true
          tags: |
            ghcr.io/hoangsonww/ai-curator-crawler:${{ github.sha }}
            ghcr.io/hoangsonww/ai-curator-crawler:latest

      - name: Build & push newsletters image
        uses: docker/build-push-action@v3
        with:
          context: ./newsletters
          file: ./newsletters/Dockerfile
          push: true
          tags: |
            ghcr.io/hoangsonww/ai-curator-newsletters:${{ github.sha }}
            ghcr.io/hoangsonww/ai-curator-newsletters:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/hoangsonww/ai-curator-frontend:${{ github.sha }}
            ghcr.io/hoangsonww/ai-curator-frontend:latest
