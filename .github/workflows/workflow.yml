name: CI Pipeline AI Content Curator

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  formatting:
    name: "🔧 Format & Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci
      - run: npm run format
      - run: npm run lint

  backend:
    name: "✅ Backend Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm --workspace backend ci
      - run: npm --workspace backend run test

  crawler:
    name: "🤖 Crawler Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm --workspace crawler ci
      - run: npm --workspace crawler run test

  newsletters:
    name: "✉️ Newsletters Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm --workspace newsletters ci
      - run: npm --workspace newsletters run test

  frontend:
    name: "🌐 Frontend Tests"
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm --workspace frontend ci
      - run: npm --workspace frontend run test:unit
        continue-on-error: true

      - name: e2e (Playwright)
        run: npm --workspace frontend exec playwright install --with-deps && npm --workspace frontend run test:e2e
        continue-on-error: true

  complete:
    name: "🎉 All Done"
    runs-on: ubuntu-latest
    needs: [backend, crawler, newsletters, frontend]
    if: ${{ always() }}
    steps:
      - run: echo "✅ Formatting, linting and required tests passed."
